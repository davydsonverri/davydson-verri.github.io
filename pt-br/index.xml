<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Davydson Verri Blog</title>
    <link>http://localhost:8080/pt-br/</link>
    <description>Recent content on Davydson Verri Blog</description>
    <generator>Hugo</generator>
    <language>pt-br</language>
    <lastBuildDate>Thu, 17 Apr 2025 06:13:33 -0300</lastBuildDate>
    <atom:link href="http://localhost:8080/pt-br/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Como Configurar uma Inst√¢ncia Completa do RabbitMQ com Docker Compose: Filas, Exchanges, DLQs, Plugins e Seguran√ßa</title>
      <link>http://localhost:8080/pt-br/posts/configurar-rabbitmq-docker-compose-filas-exchanges-dlq-plugins/</link>
      <pubDate>Thu, 17 Apr 2025 06:13:33 -0300</pubDate>
      <guid>http://localhost:8080/pt-br/posts/configurar-rabbitmq-docker-compose-filas-exchanges-dlq-plugins/</guid>
      <description>&lt;h2 id=&#34;-introdu√ß√£o&#34;&gt;üß≠ Introdu√ß√£o&lt;/h2&gt;&#xA;&lt;p&gt;Recentemente precisei configurar rapidamente uma inst√¢ncia do RabbitMQ para um projeto real.&lt;br&gt;&#xA;Devido a restri√ß√µes de seguran√ßa no ambiente de produ√ß√£o, n√£o era poss√≠vel que a aplica√ß√£o criasse recursos automaticamente.&lt;br&gt;&#xA;Al√©m disso, o uso de ferramentas de service bus como Azure Service Bus ou AWS SQS n√£o era vi√°vel no contexto.&lt;/p&gt;&#xA;&lt;p&gt;Para resolver esse desafio, desenvolvi uma estrutura com Docker Compose e um arquivo de defini√ß√µes (&lt;code&gt;definitions.json&lt;/code&gt;) que, ao executar &lt;code&gt;docker-compose up&lt;/code&gt;, provisiona automaticamente:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
